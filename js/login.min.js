(function(){
'use strict';

    var app = angular.module('teslaBase', [
        // Angular Modules
        'ui.router',
        'LocalStorageModule'
    ]);

    app.config(['$stateProvider', '$urlRouterProvider', configRoutes]);

    function configRoutes ($stateProvider, $urlRouterProvider) {

        $urlRouterProvider.otherwise("/login");

        $stateProvider
            .state('home', {
               url: '/',
               templateUrl: "templates/pages/home.html",
               controller: 'baseController',
               controllerAs: 'baseCtl'
            })
            .state('login', {
                url: '/login',
                templateUrl: "templates/pages/login.html",
                controller: 'loginController',
                controllerAs: 'loginCtl'
            });
    }

    app.config(["localStorageServiceProvider", function (localStorageServiceProvider) {
        localStorageServiceProvider
            .setPrefix('teslaDemo')
            .setStorageType('localStorage')
            .setNotify(false, false)
    }]);

    app.run(["$rootScope", "userSession", "$state", function ($rootScope, userSession, $state) {
        var statesThatRequireAuth = ['home'];
        var statesThatDoesntRequireAuth = ['login'];

        $rootScope.$on('$stateChangeStart', function (event, next, current) {
            /* Redirect to login page if user is not logged in */
            if (statesThatRequireAuth.indexOf(next.name) !== -1 && !userSession.isLoggedIn()) {
                event.preventDefault();
                $state.go('login');
            }
            /* Redirect to index if user is logged in */
            if (statesThatDoesntRequireAuth.indexOf(next.name) !== -1 && userSession.isLoggedIn()) {
                event.preventDefault();
                $state.go('home');
            }
        });
    }]);


}());
(function(){
'use strict';

var users = [
    {
        username: 'admin',
        password: 'password123'
    },
    {
        username: 'Tesla',
        password: 'teslarocks!'
    }
];

angular.module('teslaBase')
    .constant('TESLA_USERS', users)
;

}());
(function(){
'use strict';

angular.module('teslaBase')
    .factory('userSession', ['TESLA_USERS', 'localStorageService', '$state', userSession]);

    function userSession (TESLA_USERS, localStorageService, $state) {
        var service = {};

        service.authenticate = authenticate;
        service.redirectIfLoggedIn = redirectIfLoggedIn;
        service.loginUser = loginUser;
        service.logout = logout;
        service.getUser = getUser;
        service.isLoggedIn = isLoggedIn;

        function authenticate(username, password) {
            var isAuthenticated = false;
            TESLA_USERS.forEach(function (u) {
                if (u.username === username && u.password === password) {
                    isAuthenticated = true;
                    return;
                }
            });
            return isAuthenticated;
        }

        function redirectIfLoggedIn () {
            if(isLoggedIn()) {
                $state.go('home');
            }
        }

        function loginUser (user) {
            return localStorageService.set('currentUser', user.username);
        }

        function logout () {
            localStorageService.remove('currentUser');
            $state.go('login');
        }

        function getUser () {
            return localStorageService.get('currentUser');
        }

        function isLoggedIn () {
            return getUser() !== null;
        }

        return service;
    }
}());
(function(){
'use strict';

angular.module('teslaBase')
    .controller('loginController', ['userSession', '$state', '$timeout', loginController]);

    function loginController (userSession, $state, $timeout) {
        var vm = this;

        vm.user = {
            username: '',
            password: ''
        };

        vm.invalidLogin = false;

        vm.login = login;

        function login () {
            if (userSession.authenticate(vm.user.username, vm.user.password)) {
                userSession.loginUser(vm.user);
                $state.go('home');
            } else {
                vm.invalidLogin = true;
                $timeout(function(){
                    vm.invalidLogin = false;
                }, 3000);
            }
        }

    }
}());
(function(){
'use strict';

angular.module('teslaBase')
    .controller('baseController', ['userSession', baseController]);

    function baseController (userSession) {
        var vm = this;

        vm.currentUser = '';

        vm.initialize = initialize;
        vm.logout = logout;

        vm.initialize();

        /* Controller Functions here */

        function initialize () {
            userSession.redirectIfLoggedIn();
            vm.currentUser = userSession.getUser();
        }

        function logout () {
            userSession.logout();
        }
    }
}());